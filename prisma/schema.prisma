// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Article {
  id          Int      @id @default(autoincrement())
  title       String   @unique
  description String?
  body        String
  published   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  author      User?    @relation(fields: [authorId], references: [id])
  authorId    Int?
}

model User {
  id        Int       @id @default(autoincrement())
  name      String?
  email     String    @unique
  password  String
  role      Role?     @relation(fields: [roleId], references: [id])
  roleId    Int?
  articles  Article[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  sessions   Session[]
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String?  
  inactive  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]
  permissions Permission[]
  sessions   Session[]
}



model Menu {
  id        Int       @id @default(autoincrement())
  name      String?   @unique
  icon      String?
  ordering  Int
  active    Boolean   @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  // Relasi dengan SubMenu
  subMenus  SubMenu[]
  // Relasi dengan Permission
  permissions Permission[]
}

model SubMenu {
  id        Int       @id @default(autoincrement())
  name      String?   @unique
  icon      String?
  ordering  Int
  active    Boolean   @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  menuId    Int        // Menyimpan ID dari menu yang dihubungkan
  menu      Menu       @relation(fields: [menuId], references: [id])

  // Relasi dengan SubMenu2
  
  subMenus2 SubMenu2[]
}

model SubMenu2 {
  id        Int       @id @default(autoincrement())
  name      String?   @unique
  icon      String?
  ordering  Int
  active    Boolean   @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  subMenuId Int        // Menyimpan ID dari submenu yang dihubungkan
  subMenu   SubMenu    @relation(fields: [subMenuId], references: [id])

  // Relasi dengan SubMenu3
  subMenus3 SubMenu3[]
}

model SubMenu3 {
  id        Int       @id @default(autoincrement())
  name      String?   @unique
  icon      String?
  ordering  Int
  active    Boolean   @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  subMenu2Id Int       // Menyimpan ID dari submenu2 yang dihubungkan
  subMenu2  SubMenu2   @relation(fields: [subMenu2Id], references: [id])
}


model Permission {
  id        Int       @id @default(autoincrement())
  roleId    Int
  menuId    Int

  // Relasi dengan Role
  role      Role       @relation(fields: [roleId], references: [id])

  // Relasi dengan Menu
  menu      Menu       @relation(fields: [menuId], references: [id])
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  name      String?
  email     String?
  password  String
  roleId    Int?
  role      Role?    @relation(fields: [roleId], references: [id])
  online    Boolean   @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId])
}
